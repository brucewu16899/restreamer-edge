js_include /usr/local/nginx/rtmp_auth.js;

lua_shared_dict prometheus_metrics 10M;
lua_package_path "/usr/local/nginx/prometheus.lua";
init_by_lua '
  prometheus = require("prometheus").init("prometheus_metrics")
  metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
  metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
';
log_by_lua '
  local host = ngx.var.host:gsub("^www.", "")
  metric_requests:inc(1, {host, ngx.var.status})
  metric_latency:observe(ngx.now() - ngx.req.start_time(), {host})
';

server {

    listen ##HTTP_SRV_PORT##;
    
    location /index.html {
        root /usr/local/nginx/html/;
        allow all;
    }
    
    location /hls {
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
        root /tmp;
        add_header Cache-Control no-cache;
        add_header Access-Control-Allow-Origin ##HTTP_SRV_LOC_HLS_ACCESS_CONTROL_ALLOW_ORIGIN##;
    }
    
    location /auth {
        js_content rtmp_auth;
        allow 127.0.0.1;
        deny all;
    }
    
    location /status {
      stub_status_prometheus;
    }
    
    location /metrics {
        auth_basic "Restricted";
        auth_basic_user_file auth.htpasswd;
        content_by_lua 'prometheus:collect()';
    }

    location /rtmp-stat {
        auth_basic "Restricted";
        auth_basic_user_file auth.htpasswd;
        rtmp_stat all;
        rtmp_stat_stylesheet info.xsl;
    }

    location /rtmp-stat.xml {
        auth_basic "Restricted";
        auth_basic_user_file auth.htpasswd;
        rtmp_stat all;
    }

    location /rtmp-stat.json {
        auth_basic "Restricted";
        auth_basic_user_file auth.htpasswd;
        proxy_pass       http://127.0.0.1/rtmp-stat.xml;
        xml_entities     /usr/local/nginx/conf/entities.dtd;
        xslt_stylesheet  /usr/local/nginx/conf/xml2json.xsl;
    }
    
}
